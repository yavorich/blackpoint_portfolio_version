name: CI/CD

on:
  workflow_dispatch:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: [ self-hosted, main-hosted ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Create env file'
        run: |
          echo "${{ secrets.MAIN_ENV_FILE }}" > .env

      - name: Build and run
        run: |
          docker compose restart
          
      - name: Linter check (Black)
        run: docker exec -t blackdot_backend black --check --exclude '^.*\b(migrations)\b.*$' .

      - name: Rollback if fail
        if: failure()
        run: |
          git reset --hard HEAD~1
          docker compose up --build --force-recreate -d
          docker image prune -f

      - name: Collect static
        run: docker exec -t blackdot_backend python3 manage.py collectstatic --noinput

  database:
    runs-on: [ self-hosted, main-hosted ]
    needs: deploy
    steps:
      - name: Backup database
        run: docker exec -t blackdot_backend pg_dumpall -c -U postgres > local_dump.sql

      - name: Migrations
        run: docker exec -t blackdot_backend python3 manage.py migrate --no-input

      - name: Rollback git and DB if fail
        if: failure()
        run: |
          git reset --hard HEAD~1
          docker compose up --build --force-recreate -d
          cat local_dump.sql | docker exec -i blackdot_postgres psql postgres -U postgres
          docker image prune -f
